categories:
- Monitoring
questions:
# Docker image configurations
- variable: defaultImage
  default: "true"
  description: "Use default Docker image"
  label: Use Default Image
  type: boolean
  show_subquestion_if: false
  group: "Container Images"
  subquestions:
  - variable: server.image.repository
    default: "prom/prometheus"
    description: "Prometheus image name"
    type: string
    label: Prometheus Image Name
  - variable: alertmanager.image.tag
    default: "v2.2.1"
    description: "Prometheus image tag"
    type: string
    label: Prometheus Image Tag
    show_if: "alertmanager.enabled=true"
  - variable: alertmanager.image.repository
    default: "prom/alertmanager"
    description: "alertmanager image name"
    type: string
    label: Alertmanager Image Name
    show_if: "alertmanager.enabled=true"
  - variable: alertmanager.image.tag
    default: "v0.14.0"
    description: "alertmanager image tag"
    type: string
    label: Alertmanager Image Tag
    show_if: "alertmanager.enabled=true"
  - variable: nodeExporter.image.repository
    default: "prom/node-exporter"
    description: "nodeExporter image name"
    type: string
    label: NodeExporter Image Name
    show_if: "nodeExporter.enabled=true"
  - variable: nodeExporter.image.tag
    default: "v0.15.2"
    description: "nodeExporter image tag"
    type: string
    label: NodeExporter Image Tag
    show_if: "nodeExporter.enabled=true"
  - variable: pushgateway.image.repository
    default: "prom/pushgateway"
    description: "pushgateway image name"
    type: string
    label: Pushgateway Image Name
    show_if: "pushgateway.enabled=true"
  - variable: pushgateway.image.tag
    default: "v0.4.0"
    description: "pushgateway image tag"
    type: string
    label: Pushgateway Image Tag
    show_if: "pushgateway.enabled=true"
  - variable: kubeStateMetrics.image.repository
    default: "k8s.gcr.io/kube-state-metrics"
    description: "kube-state-metrics image name"
    type: string
    label: KubeStateMetrics Image Name
    show_if: "kubeStateMetrics.enabled=true"
  - variable: kubeStateMetrics.image.tag
    default: "v1.2.0"
    description: "kube-state-metrics image tag"
    type: string
    label: KubeStateMetrics Image Tag
    show_if: "kubeStateMetrics.enabled=true"
# alertmanager configurations
- variable: alertmanager.enabled
  default: "true"
  description: "If true, create alertmanager"
  type: enum
  group: "Alertmanager"
  options:
    - "true"
    - "false"
  label: Enable Alertmanager
  show_subquestion_if: true
  subquestions:
  - variable: alertmanager.name
    default: "alertmanager"
    description: "alertmanager container name"
    type: string
    label: Alertmanager Container Name
    required: true
  - variable: alertmanager.replicaCount
    default: "1"
    description: "desired number of alertmanager pods"
    type: string
    required: true
    label: Alertmanager Replicas
- variable: alertmanager.ingress.enabled
  default: "true"
  description: "Expose alertmanager using Layer 7 Load Balancer - ingress"
  type: enum
  group: "Alertmanager"
  options:
    - "true"
    - "false"
  label: Expose Alertmanager using Layer 7 Load Balancer
  show_if: "alertmanager.enabled=true"
  show_subquestion_if: true
  required: true
  subquestions:
  - variable: alertmanager.ingress.hosts[0]
    default: "xip.io"
    description: "Hostname to your alertmanager installation"
    type: hostname
    required: true
    label: Hostname
- variable: alertmanager.persistentVolume.enabled
  default: "false"
  description: "If true, alertmanager will create a persistent volume claim"
  type: enum
  required: true
  group: "Alertmanager"
  options:
    - "true"
    - "false"
  label: Create Persistent Volume for Alertmanager
  show_if: "alertmanager.enabled=true"
  show_subquestion_if: true
  subquestions:
  - variable: alertmanager.persistentVolume.size
    default: "2Gi"
    description: "alertmanager data persistent volume size"
    type: string
    label: Alertmanager Persistent Volume Size
  - variable: alertmanager.persistentVolume.storageClass
    default: ""
    description: "alertmanager data persistent volume storageClass, if not set use default StorageClass"
    type: storageclass
    label: Alertmanager Persistent Volume StorageClass
- variable: alertmanager.server.type
  default: "ClusterIP"
  description: "alertmanager service type"
  type: enum
  show_if: "alertmanager.ingress.enabled=false"
  group: "Alertmanager"
  options:
    - "ClusterIP"
    - "NodePort"
  required: true
  label: Alertmanager Service Type
  show_subquestion_if: "NodePort"
  subquestions:
  - variable: alertmanager.service.nodePort
    default: ""
    description: "NodePort http port(to set explicitly, choose port between 30000-32767)"
    type: int
    min: 30000
    max: 32767
    label: Alertmanager NodePort Http Port
# nodeExporter configurations
- variable: nodeExporter.enabled
  default: "true"
  description: "If true, create nodeExporter"
  type: enum
  group: "NodeExporter"
  options:
    - "true"
    - "false"
  label: Enable NodeExporter
  show_subquestion_if: true
  subquestions:
  - variable: nodeExporter.name
    default: "node-exporter"
    description: "alertmanager container name"
    type: string
    label: Alertmanager Container Name
    required: true
  - variable: nodeExporter.hostPort
    default: "9100"
    description: "nodeExporter host port"
    type: string
    label: NodeExporter Host Port
    required: true
# server configurations
- variable: server.name
  default: "server"
  description: "Prometheus server container name"
  type: string
  group: "Prometheus Server"
  label: Prometheus Server Container Name
  required: true
- variable: server.replicaCount
  default: "1"
  description: "desired number of prometheus pods"
  type: int
  required: true
  label: Prometheus Replicas
  group: "Prometheus Server"
- variable: server.ingress.enabled
  default: "true"
  description: "Expose prometheus using Layer 7 Load Balancer - ingress"
  type: enum
  group: "Prometheus Server"
  options:
    - "true"
    - "false"
  label: Expose Prometheus using Layer 7 Load Balancer
  show_subquestion_if: true
  required: true
  subquestions:
  - variable: server.ingress.hosts[0]
    default: "xip.io"
    description: "prometheus server ingress hostname"
    type: hostname
    required: true
    label: Hostname
- variable: server.persistentVolume.enabled
  default: "false"
  description: "If true, prometheus will create a persistent volume claim"
  type: enum
  group: "Prometheus Server"
  required: true
  options:
    - "true"
    - "false"
  label: Create Persistent Volume for Prometheus
  show_subquestion_if: true
  subquestions:
  - variable: server.persistentVolume.size
    default: "8Gi"
    description: "prometheus data persistent volume size"
    type: string
    label: Prometheus Persistent Volume Size
  - variable: server.persistentVolume.storageClass
    default: ""
    description: "prometheus data persistent volume storageClass, if not set use default StorageClass"
    type: storageclass
    label: Prometheus Persistent Volume StorageClass
- variable: server.service.type
  default: "ClusterIP"
  description: "server service type"
  group: "Prometheus Server"
  type: enum
  show_if: "server.ingress.enabled=false"
  options:
    - "ClusterIP"
    - "NodePort"
  required: true
  label: Prometheus Service Type
  show_subquestion_if: "NodePort"
  subquestions:
  - variable: server.service.nodePort
    default: ""
    description: "NodePort http port(to set explicitly, choose port between 30000-32767)"
    type: int
    min: 30000
    max: 32767
    label: Prometheus NodePort Http Port
# pushgateway configurations
- variable: pushgateway.enabled
  default: "true"
  description: "If true, create pushgateway"
  type: enum
  group: "Pushgateway"
  options:
    - "true"
    - "false"
  label: Enable Pushgateway
  show_subquestion_if: true
  subquestions:
  - variable: pushgateway.name
    default: "pushgateway"
    description: "pushgateway container name"
    type: string
    label: Pushgateway Container Name
    required: true
  - variable: pushgateway.replicaCount
    default: "1"
    description: "desired number of pushgateway pods"
    type: string
    required: true
    label: Pushgateway Replicas
- variable: pushgateway.ingress.enabled
  default: "true"
  description: "Expose pushgateway using Layer 7 Load Balancer - ingress"
  type: enum
  group: "Pushgateway"
  options:
    - "true"
    - "false"
  label: Expose Pushgateway using Layer 7 Load Balancer
  show_if: "pushgateway.enabled=true"
  show_subquestion_if: true
  required: true
  subquestions:
  - variable: pushgateway.ingress.hosts[0]
    default: "xip.io"
    description: "pushgateway server ingress hostname"
    type: hostname
    required: true
    label: Hostname
- variable: pushgateway.persistentVolume.enabled
  default: "false"
  description: "If true, pushgateway will create a persistent volume claim"
  type: enum
  required: true
  group: "Pushgateway"
  options:
    - "true"
    - "false"
  label: Create Persistent Volume for Pushgateway
  show_subquestion_if: true
  subquestions:
  - variable: pushgateway.persistentVolume.size
    default: "8Gi"
    description: "pushgateway data persistent volume size"
    type: string
    label: Pushgateway Persistent Volume Size
  - variable: pushgateway.persistentVolume.storageClass
    default: ""
    description: "pushgateway data persistent volume storageClass, if not set use default StorageClass"
    type: storageclass
    label: Pushgateway Persistent Volume StorageClass
- variable: pushgateway.service.type
  default: "ClusterIP"
  description: "server service type"
  type: enum
  show_if: "pushgateway.ingress.enabled=false"
  group: "Pushgateway"
  options:
    - "ClusterIP"
    - "NodePort"
  required: true
  label: Pushgateway Service Type
  show_if: "pushgateway.enabled=true"
  show_subquestion_if: "NodePort"
  subquestions:
  - variable: pushgateway.service.nodePort
    default: ""
    description: "NodePort http port(to set explicitly, choose port between 30000-32767)"
    type: int
    min: 30000
    max: 32767
    label: Pushgateway NodePort Http Port
# kube-state-metrics configurations
- variable: kubeStateMetrics.enabled
  default: "true"
  description: "If true, kube-state-metrics will be installed"
  type: enum
  group: "KubeStateMetrics"
  options:
    - "true"
    - "false"
  label: Enable KubeStateMetrics
  show_subquestion_if: true
  subquestions:
  - variable: kubeStateMetrics.name
    default: "kube-state-metrics"
    description: "kube-state-metrics container name"
    type: string
    label: KubeStateMetrics Container Name
    required: true
